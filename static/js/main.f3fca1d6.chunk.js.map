{"version":3,"sources":["components/JudgeInfo/JudgeInfo.jsx","components/JudgeInfo/Judge.jsx","components/CategoryInput/ListItem.jsx","components/CategoryInput/AwardList.jsx","components/CategoryInput/CategoryInput.jsx","components/DataEntry/DataEntry.jsx","App.js","serviceWorker.js","index.js"],"names":["options","JudgeInfo","props","_this","Object","_Users_lawrence_Desktop_codebase_judging_portal_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_lawrence_Desktop_codebase_judging_portal_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_lawrence_Desktop_codebase_judging_portal_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","curr_name","selected","info","count","handleName","bind","_Users_lawrence_Desktop_codebase_judging_portal_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","addInfo","handleClickIndex","_onSelect","option","setState","index","event","eval","target","name","splice","value","concat","label","_this2","defaultOption","map","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","_Judge__WEBPACK_IMPORTED_MODULE_10__","api","color","placeholder","onChange","react_dropdown__WEBPACK_IMPORTED_MODULE_7___default","type","Component","Judge","react__WEBPACK_IMPORTED_MODULE_5___default","ListItem","react_default","text","AwardList","classCallCheck","possibleConstructorReturn","getPrototypeOf","currentAward","awardsList","inputChange","assertThisInitialized","addToList","removeItem","awards","slice","key","curr_item","console","log","listTitle","inputBackgroundText","onKeyPress","item","components_CategoryInput_ListItem","CategoryInput","components_CategoryInput_AwardList","DataEntry","tableNum","clusterNum","waveNum","fileName","handleTable","handleCluster","handleWave","saveVals","changeFileName","wavenum","replace","id","for","App","components_CategoryInput_CategoryInput","components_DataEntry_DataEntry","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3fca1d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './JudgeInfo.css';\nimport Judge from './Judge';\n\nconst options = ['one', 'two', 'three', 'four'];\n\nclass JudgeInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curr_name: '',\n      selected: '',\n      info: [],\n      count: 0\n    };\n    this.handleName = this.handleName.bind(this);\n    this.addInfo = this.addInfo.bind(this);\n    this.handleClickIndex = this.handleClickIndex.bind(this);\n    this._onSelect = this._onSelect.bind(this);\n  }\n\n  _onSelect(option) {\n    this.setState({ selected: option });\n  }\n\n  handleClickIndex(index, event){\n    eval(this[event.target.name]).bind(this)(index, event)\n  }\n\n  removeTask(index, event) {\n    const info = this.state.info\n    info.splice(index, 1)    \n    this.setState({info})\n  }\n\n  handleName(event) {\n    this.setState({\n      curr_name: event.target.value\n    });\n  }\n\n  addInfo() {\n    if (this.state.curr_name !== '' && this.state.selected !== '') {\n      this.setState({\n        info: this.state.info.concat([\n          [this.state.curr_name, this.state.selected.label, this.state.count]\n        ]),\n        curr_name: '',\n        count: this.state.count + 1,\n        selected: ''\n      });\n    }\n  }\n\n  render() {\n    const defaultOption = this.state.selected;\n    const info = (this.state.info||[]).map((name,index)=>(\n      <ul className=\"judge-item\">\n        <div className=\"delete-button\">\n          <button name=\"removeTask\" className=\"delete-button\" onClick={event=>this.handleClickIndex(index,event)}>\n              ×\n          </button>\n        </div>       \n         <Judge\n        name={name[0]}\n        api={this.state.info[index][1]}\n        color={this.state.info[index][2]}\n          />\n      </ul>\n    ))\n\n    return (\n      <div className=\"judge-info-page\">\n        <p className=\"judge-info-title\">Judge Information</p>\n        <div className=\"input-list\">\n          <div className=\"entry-container\">\n            <div className=\"input-container\">\n              <p className=\"input-name-header\">Judge Name</p>\n              <input\n                className=\"input-name\"\n                placeholder=\"Judge Name\"\n                value={this.state.curr_name}\n                onChange={this.handleName}\n              />\n\n              <div className=\"input-api-header\">\n                Judge API\n              </div>\n              \n              <div className=\"dropdown\">\n                <Dropdown\n                  options={options}\n                  onChange={this._onSelect}\n                  value={defaultOption}\n                  placeholder=\"Select an option\"\n                />\n              </div>\n\n              <button\n                className=\"submit-button-judge\"\n                type=\"button\"\n                onClick={this.addInfo}\n              >\n                Submit\n              </button>\n            </div>\n\n            <div className=\"judge-info-list-border\">\n              <div className=\"name-list-header\">\n                <p className = \"name-text\">\n                  Name\n                </p>           \n              </div>\n\n              <div className=\"api-list-header\">\n                <p className = \"name-text\">\n                  API\n                </p>\n              </div>\n\n              <div className=\"list\">\n                {info}\n              </div>\n              {\n                this.state.name &&\n                <li>{this.state.name}</li>\n              }\n            </div>\n          </div>\n\n          <div className= \"buttons\">\n            <button className=\"judge-button\" >Prev</button>\n            <button className=\"judge-button\">Next</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JudgeInfo;\n","import React, { Component } from 'react';\nimport './Judge.css';\n\nclass Judge extends Component {\n  render() {\n    return (\n      <div\n        className=\"judge\"\n      >\n        <div className=\"judge-name\">{this.props.name}</div>\n        <div className=\"judge-api\">{this.props.api}</div>\n      </div>\n    );\n  }\n}\n\nexport default Judge;\n","import React, {Component} from \"react\";\nimport './ListItem.css';\n\nclass ListItem extends Component {\n\n    render() {\n        return (\n            <div className=\"ListItem\">\n              <li>{this.props.text}</li>\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React, { Component } from 'react';\nimport './AwardList.css';\nimport ListItem from './ListItem';\n\nclass AwardList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        currentAward: \"\",\n        awardsList: []\n    };\n    this.inputChange = this.inputChange.bind(this);\n    this.addToList = this.addToList.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  removeItem(index) {\n    let awards = this.state.awardsList.slice();\n    awards.splice(index, 1);\n    this.setState({\n      awardsList: awards\n    });\n  }\n\n  inputChange(event) {\n    this.setState({\n        currentAward: event.target.value\n    })\n  }\n\n  addToList(event) {\n    if (event.key == 'Enter') {\n        if (this.state.curr_item !== \"\") {\n            this.setState({\n                currentAward: \"\",\n                awardsList: this.state.awardsList.concat(this.state.currentAward)\n            })\n            console.log(\"successfully added\");\n        }\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"awardList\">\n            <div className=\"\">\n                <h1 className = \"list-name\"> {this.props.listTitle}</h1>\n            </div>\n            <div className=\"input-field\">\n                <input className=\"list-input\" placeholder={this.props.inputBackgroundText} value={this.state.currentAward} onChange={this.inputChange} onKeyPress={this.addToList}></input>\n            </div>\n            <ol className=\"list-content\">\n                {this.state.awardsList.map((item, index) => (\n                  <div className=\"list-element\">\n                    <ListItem key={index} text={item}/>\n                    <div className=\"close-button\" onClick={() => this.removeItem(index)}>\n                      x\n                    </div>\n                  </div>\n                ))}\n            </ol>\n        </div>\n    );\n  }\n}\n\nexport default AwardList;\n","import React, { Component } from 'react';\nimport AwardList from './AwardList';\n\nimport './CategoryInput.css';\n\nclass CategoryInput extends Component {\n  render() {\n    return (\n      <div className=\"categoryInputPage\">\n        <div className=\"title\">\n          <h>Judging Categories</h>\n        </div>\n\n        <div className=\"category_body\">\n          <div className =\"category_lists\">\n            <AwardList listTitle=\"APIs\" inputBackgroundText=\"+ Add API\"/>\n            <AwardList listTitle=\"General Categories\" inputBackgroundText=\"+ Add Category\"/>\n            <AwardList listTitle=\"Fellowships\" inputBackgroundText=\"+ Add Fellowship\"/>\n          </div>\n          <button className=\"next_button\">Next</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CategoryInput;\n","import React, { Component } from 'react';\nimport './DataEntry.css';\n\n\nclass DataEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tableNum: '',\n      clusterNum: '',\n      waveNum: '',\n      fileName: 'Upload File'\n    };\n    this.handleTable = this.handleTable.bind(this);\n    this.handleCluster = this.handleCluster.bind(this);\n    this.handleWave = this.handleWave.bind(this);\n    this.saveVals = this.saveVals.bind(this);\n    this.changeFileName = this.changeFileName.bind(this);\n  }\n\n  handleTable(event) {\n    this.setState({\n      tableNum: event.target.value\n    });\n    if (event.key === 'Enter') {\n      console.log(event.target.value);\n    }\n  }\n\n  handleCluster(event) {\n    this.setState({\n      clusterNum: event.target.value\n    });\n    if (event.key === 'Enter') {\n      console.log(this.state.clusterNum);\n    }\n  }\n\n  handleWave(event) {\n    this.setState({\n      wavenum: event.target.value\n    });\n    if (event.key === 'Enter') {\n      console.log(this.state.waveNum);\n    }\n  }\n\n  saveVals(event) {\n    console.log(this.state.tableNum, this.state.clusterNum, this.state.waveNum);\n  }\n\n  changeFileName(event) {\n    let input = event.target.value;\n    let fileName = input.replace(/^.*[\\\\\\/]/, '');\n    if (fileName == '') {\n      fileName = 'Upload File';\n    }\n    this.setState({\n      fileName: fileName\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"view\">\n        <div className=\"pheader\">\n          <h1>Data Entry</h1>\n        </div>\n        <div className=\"box\">\n          <div className=\"c\">\n            <div className=\"datatype\">\n              <h2>Number of Tables</h2>\n            </div>\n            <input\n              placeholder=\"Add Entry\"\n              onKeyPress={this.handleTable}\n              className=\"input-box \"\n            />\n          </div>\n\n          <div className=\"c\">\n            <div className=\"datatype\">\n              <h2>Number of Clusters</h2>\n            </div>\n            <input\n              placeholder=\"Add Entry\"\n              onKeyPress={this.handleCluster}\n              className=\"input-box\"\n            />\n          </div>\n\n          <div className=\"c\">\n            <div className=\"datatype\">\n              <h2>Waves of Judges</h2>\n            </div>\n            <input\n              placeholder=\"Add Entry\"\n              onKeyPress={this.handleWave}\n              className=\"input-box\"\n            />\n          </div>\n\n          <div className=\"c\">\n            <div className=\"datatype\">\n              <h2>Upload Devpost</h2>\n            </div>\n            <input type=\"file\" id=\"og-file\" className=\"upload-file\" onChange={this.changeFileName}/>\n            <label for=\"og-file\">{this.state.fileName}</label>\n          </div>\n\n          <div className=\"submit-button-box\">\n            <button className=\"button\" onClick={this.saveVals}>\n              <div className=\"submit-button\">Prev</div>\n            </button>\n\n            <button className=\"button\" onClick={this.saveVals}>\n              <div className=\"submit-button\">Next</div>\n            </button>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataEntry;\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport CategoryInput from './components/CategoryInput/CategoryInput';\nimport DataEntry from './components/DataEntry/DataEntry';\nimport JudgeInfo from './components/JudgeInfo/JudgeInfo';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      \t<CategoryInput />\n        <DataEntry />\n        <JudgeInfo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}